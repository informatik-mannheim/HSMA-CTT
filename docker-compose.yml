version: '3.7'
services:
  app:
    image: docker.pkg.github.com/informatik-mannheim/hsma-ctt/ctt-app
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.postgresql.Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/ctt
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-tiXXbPWmwdRW}
      - SPRING_DATASOURCE_PASSWORD=${DB_PW:-grEtwOBI4E}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_H2_CONSOLE_ENABLED=false
      - SERVER_TOMCAT_ACCESSLOG_ENABLED=false
      - SERVER_ENV=production
      - SERVER_ADDRESS=0.0.0.0
      - TZ=${timezone:-Europe/Berlin}
      # The URL to prefix absolute URLs with, since nginx handles the outside connections.
      - URL_OVERRIDE=${URL_OVERRIDE}
      # AES Secret used to encrypt personal data in the database, override in .env
      - DB_ENCRYPTION_SECRET=${DB_ENCRYPTION_SECRET:-corona-ctt-20201}
      # A list of users in the format Username1,EncryptedPassword1,Role1,Role2;Username2,EncryptedPassword2,Role2;
      # Override with your own credentials in a .env file next to docker-compose.yml
      # Passwords are encrypted using Bcrypt in Java Spring. (Use org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode("passwordToEncode") )
      - USER_CREDENTIALS=${USER_CREDENTIALS:-user,$2a$10$WUJevKFYLHfIheVZ3yv7J.7uIHeoPV8fAb9wFqdW50kFD8O4EWJ4u,USER;prof,$2a$10$WUJevKFYLHfIheVZ3yv7J.7uIHeoPV8fAb9wFqdW50kFD8O4EWJ4u,PROF;admin,$2a$10$nW.GjVHey9UA47Xv8V8yHe5WQ67rNLsI3bjdi8gIM/28MufxGc53a,PROF,ADMIN;}
      # Override current names of the study rooms
      - CTT_STUDYROOMS=L11;L12;L13;L14;L15;L111;L112;L113;L114;L115;L206;L207;L208;L209;L210
    restart: always
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-XXbPWmwdRW}
      - POSTGRES_PASSWORD=${DB_PW:-grEtwOBI4E}
      - POSTGRES_DB=ctt
      - TZ=${timezone:-Europe/Berlin}
    restart: always
  proxy:
    image: nginx:1-alpine
    environment:
      - TZ=${timezone:-Europe/Berlin}
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/:/etc/ssl/certs/:ro
    restart: always
    ports:
      - '80:80'
      - '443:443'
